@startuml
package agent {
  class DataCollector {
    +fetch_deposits(): DataFrame
    +save_snapshot(name: str)
  }

  class DataPreprocessor {
    +load_raw(source)
    +clean(df)
    +encode(df)
    +add_features(df)
  }

  class RecommendationModel {
    -model: sklearn.BaseEstimator
    +train(df)
    +predict(user_profile): List<Deposit>
    +evaluate(df): Metrics
    +save(path: str)
    +load(path: str)
  }

  class UserProfile {
    +amount: float
    +term_months: int
    +goal: str
    +risk_tolerance: str
  }

  class AgentInterface {
    +get_user_input(): UserProfile
    +show_recommendations(list<Deposit>)
    +run()
  }

  DataCollector --> DataPreprocessor : supplies
  DataPreprocessor --> RecommendationModel : prepares data
  AgentInterface --> RecommendationModel : uses
  AgentInterface --> UserProfile : creates
}
@enduml